/*!
 ******************************************************************************
 **
 ** \file dmac_fm3.h
 **
 ** \brief DMA head file
 **
 ** \author FSLA AE Team
 **
 ** \version V0.10
 **
 ** \date 2011-11-21
 **
 ** \attention THIS SAMPLE CODE IS PROVIDED AS IS. FUJITSU SEMICONDUCTOR
 **            ACCEPTS NO RESPONSIBILITY OR LIABILITY FOR ANY ERRORS OR
 **            OMMISSIONS.
 **
 ** (C) Copyright 200x-201x by Fujitsu Semiconductor(Shanghai) Co.,Ltd.
 **
 ******************************************************************************
 */ 

/*!
 ******************************************************************************
 ** \brief DMA Interrupt Type structure
 ******************************************************************************
 */
#ifndef _DMAC_FM3_H_
#define _DMAC_FM3_H_

#include "fm3_common.h"

#ifdef __cplusplus
extern "C" {
#endif

/* DMA channel judge */                                            
/*!
 ******************************************************************************
 ** \brief define DMA channel 0
 ******************************************************************************
 */  
#define DMA_ch_0             ((uint8_t)0x00)
/*!
 ******************************************************************************
 ** \brief define DMA channel 1
 ******************************************************************************
 */  
#define DMA_ch_1             ((uint8_t)0x01)
/*!
 ******************************************************************************
 ** \brief define DMA channel 2
 ******************************************************************************
 */  
#define DMA_ch_2             ((uint8_t)0x02)
/*!
 ******************************************************************************
 ** \brief define DMA channel 3
 ******************************************************************************
 */    
#define DMA_ch_3             ((uint8_t)0x03)
/*!
 ******************************************************************************
 ** \brief define DMA channel 4
 ******************************************************************************
 */    
#define DMA_ch_4             ((uint8_t)0x04)
/*!
 ******************************************************************************
 ** \brief define DMA channel 5
 ******************************************************************************
 */    
#define DMA_ch_5             ((uint8_t)0x05)
/*!
 ******************************************************************************
 ** \brief define DMA channel 6
 ******************************************************************************
 */   
#define DMA_ch_6             ((uint8_t)0x06)
/*!
 ******************************************************************************
 ** \brief define DMA channel 7
 ******************************************************************************
 */   
#define DMA_ch_7             ((uint8_t)0x07)
/*!
 ******************************************************************************
 ** \brief DMA channel range check
 ******************************************************************************
 */
#define IS_DMA_CH_VALID(ch)       ((ch == DMA_ch_0) || \
                                  (ch == DMA_ch_1)  || \
                                  (ch == DMA_ch_2)  || \
                                  (ch == DMA_ch_3)  || \
                                  (ch == DMA_ch_4)  || \
                                  (ch == DMA_ch_5)  || \
                                  (ch == DMA_ch_6)  || \
                                  (ch == DMA_ch_7) )

/*!
 ******************************************************************************
 ** \brief DMA interrupt type
 ******************************************************************************
 */
typedef enum DMAIntType
{
    ErrAddOverflow=1,    //!< address over error
    StopRqst,            //!< stop request
    ErrSrsAddErr,        //!< source address error
    ErrDesAddErr,        //!< destination address error
    Success,             //!< success
    Pause                //!< pause
} DMAIntType;
/*!
 ******************************************************************************
 ** \brief DMA callback function type
 ******************************************************************************
 */
typedef void (*DMA_Callback)(uint8_t Inttype);

/*!
 ******************************************************************************
 ** \brief DMA callback function array
 ******************************************************************************
 */
extern DMA_Callback DMA_IrqCallback[];


/*
 ******************************************************************************
 ** normal data transfer by software trigger
 ******************************************************************************
 */
void DMA_NrmlDataTrsfBySftTrig(uint32_t src, uint32_t des, 
                                      uint16_t bytes, uint8_t ch);
/*
 ******************************************************************************
 ** check DMA channel 0 busy status
 ******************************************************************************
 */
uint8_t DMA_IsNormSoftTrigBusy_Ch0(void);
/*
 ******************************************************************************
 ** check DMA channel 1 busy status
 ******************************************************************************
 */
uint8_t DMA_IsNormSoftTrigBusy_Ch1(void);
/*
 ******************************************************************************
 ** check DMA channel 2 busy status
 ******************************************************************************
 */
uint8_t DMA_IsNormSoftTrigBusy_Ch2(void);
/*
 ******************************************************************************
 ** check DMA channel 3 busy status
 ******************************************************************************
 */
uint8_t DMA_IsNormSoftTrigBusy_Ch3(void);
/*
 ******************************************************************************
 ** check DMA channel 4 busy status
 ******************************************************************************
 */
uint8_t DMA_IsNormSoftTrigBusy_Ch4(void);
/*
 ******************************************************************************
 ** check DMA channel 5 busy status
 ******************************************************************************
 */
uint8_t DMA_IsNormSoftTrigBusy_Ch5(void);
/*
 ******************************************************************************
 ** check DMA channel 6 busy status
 ******************************************************************************
 */
uint8_t DMA_IsNormSoftTrigBusy_Ch6(void);
/*
 ******************************************************************************
 ** check DMA channel 7 busy status
 ******************************************************************************
 */
uint8_t DMA_IsNormSoftTrigBusy_Ch7(void);



#ifdef __cplusplus
}
#endif

#endif